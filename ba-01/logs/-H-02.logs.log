do run
loading script "helix_air.py"
loading script "helix_pump_ms.py"
loading script "helix_air.py"
loading script "helix_pump_prep.py"
testing...
no interpolation path defined
executed snippet estimated_duration=156.88, duration=0.000241994857788
script duration name:air seconds:157.0
loading script "helix_air.py"
loading script "helix_pump_ms.py"
loading script "helix_air.py"
loading script "helix_pump_prep.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.19345092773e-05
air in script context. using previous estimated duration
script duration name:air seconds:157.0
loading script "helix_air.py"
loading script "helix_pump_ms.py"
loading script "helix_air.py"
loading script "helix_pump_prep.py"
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=9.89437103271e-05
Script duration 314.0
Run total estimated duration= 315.000
run duration: 0:05:15
doing event level: 2
----------------- start -----------------
**************** Experiment Type: Ar/Ar, Ar/Ar
create new session 4946199088
close session 4946199088
$$$$$ Clearing conditionals
adding conditionals 
Add queue conditionals
add default conditionals
no Default Conditionals file. None
Start automated run ba-01-H-02
loading script "helix_air.py"
loading script "helix_pump_ms.py"
loading script "helix_air.py"
loading script "helix_pump_prep.py"
%%%%%%%%%%%%%%%%%% setting automated run ba-01-H-02
No value "eqtime" in metadata
No value "sensitivity_multiplier" in metadata
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
============================= Pre Extraction Check =============================
loading queue conditionals pre_run_terminations
loading system conditionals pre_run_terminations
no system conditionals file located at None
=================================================================================
start extraction
do extraction
Analysis started at 13:05:06.908333
Extraction Started helix_air.py
13:05:06 -- ******* Extraction Started helix_air.py *******
state changed from not run to extraction
DO EXTRACTION <pychron.extraction_line.pyscript_runner.PyScriptRunner object at 0x127f42a70>
testing...
no interpolation path defined
executed snippet estimated_duration=34.0, duration=0.000254154205322
Air pipette
open ('3',) {}
open name=3 desc=---
check software interlocks 3
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
ROUT:OPEN (@103)
change switch state (True, True)
update switch state 3 True args=() kw={} ncanvase=2
13:05:06 -- OPEN   VALVE-3 (SecondToIP)
-------------------------- open 3 () result=[(True, True)]
action=open, ok=True, locked=[False]
close ('2',) {}
close name=2 desc=---
check software interlocks 2
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
ROUT:CLOSE (@102)
change switch state (True, True)
update switch state 2 False args=() kw={} ncanvase=2
13:05:07 -- CLOSE  VALVE-2 (ExtrToMS)
-------------------------- close 2 () result=[(True, True)]
action=close, ok=True, locked=[False]
open ('1',) {}
open name=1 desc=---
check software interlocks 1
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
Open Valve Ion Pump Set ===>> OK
change switch state (True, True)
update switch state 1 True args=() kw={} ncanvase=2
13:05:07 -- OPEN   VALVE-1 (MSIonPump)
-------------------------- open 1 () result=[(True, True)]
action=open, ok=True, locked=[False]
close ('8',) {}
close name=8 desc=---
check software interlocks 8
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
ROUT:CLOSE (@108)
change switch state (True, True)
update switch state 8 False args=() kw={} ncanvase=2
13:05:07 -- CLOSE  VALVE-8 (Sample1toFirst)
-------------------------- close 8 () result=[(True, True)]
action=close, ok=True, locked=[False]
close ('9',) {}
close name=9 desc=---
check software interlocks 9
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
ROUT:CLOSE (@109)
change switch state (True, True)
update switch state 9 False args=() kw={} ncanvase=2
13:05:08 -- CLOSE  VALVE-9 (Sample2toFirst)
-------------------------- close 9 () result=[(True, True)]
action=close, ok=True, locked=[False]
close ('7',) {}
close name=7 desc=---
check software interlocks 7
interlocks ['6']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel False
ROUT:CLOSE (@107)
change switch state (True, True)
update switch state 7 False args=() kw={} ncanvase=2
13:05:08 -- CLOSE  VALVE-7 (APInner)
-------------------------- close 7 () result=[(True, True)]
action=close, ok=True, locked=[False]
open ('5',) {}
open name=5 desc=---
check software interlocks 5
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
ROUT:OPEN (@105)
change switch state (True, True)
update switch state 5 True args=() kw={} ncanvase=2
13:05:08 -- OPEN   VALVE-5 (FirstToTurbo)
-------------------------- open 5 () result=[(True, True)]
action=open, ok=True, locked=[False]
open ('11',) {}
open name=11 desc=---
check software interlocks 11
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
ROUT:OPEN (@111)
change switch state (True, True)
update switch state 11 True args=() kw={} ncanvase=2
13:05:08 -- OPEN   VALVE-11 (APSafety)
-------------------------- open 11 () result=[(True, True)]
action=open, ok=True, locked=[False]
open ('6',) {}
open name=6 desc=---
check software interlocks 6
interlocks ['7']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
ROUT:OPEN (@106)
change switch state (True, True)
update switch state 6 True args=() kw={} ncanvase=2
13:05:09 -- OPEN   VALVE-6 (APOuter)
-------------------------- open 6 () result=[(True, True)]
load indicator states
Switch indicator state True, Open
handle state ('11', True, False)
update switch state 11 True args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('10', True, False)
update switch state 10 True args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('1', True, False)
update switch state 1 True args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('3', True, False)
update switch state 3 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('2', False, False)
update switch state 2 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('5', True, False)
update switch state 5 True args=(False,) kw={} ncanvase=2
action=open, ok=True, locked=[False]
sleep (15,) {}
SLEEP 15.0
block started
WaitControl setup for 15.0  
Switch indicator state False, Closed
handle state ('4', False, False)
update switch state 4 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('7', False, False)
update switch state 7 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('6', True, False)
update switch state 6 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('9', False, False)
update switch state 9 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('8', False, False)
update switch state 8 False args=(False,) kw={} ncanvase=2
load indicator states
Switch indicator state True, Open
handle state ('11', True, False)
update switch state 11 True args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('10', True, False)
update switch state 10 True args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('1', True, False)
update switch state 1 True args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('3', True, False)
update switch state 3 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('2', False, False)
update switch state 2 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('5', True, False)
update switch state 5 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('4', False, False)
update switch state 4 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('7', False, False)
update switch state 7 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('6', True, False)
update switch state 6 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('9', False, False)
update switch state 9 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('8', False, False)
update switch state 8 False args=(False,) kw={} ncanvase=2
Join finished
block finished. duration 15.0686678886
close ('6',) {}
close name=6 desc=---
check software interlocks 6
interlocks ['7']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
ROUT:CLOSE (@106)
change switch state (True, True)
update switch state 6 False args=() kw={} ncanvase=2
13:05:24 -- CLOSE  VALVE-6 (APOuter)
-------------------------- close 6 () result=[(True, True)]
action=close, ok=True, locked=[False]
Blank. Not filling pipette
close ('5',) {}
close name=5 desc=---
check software interlocks 5
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
ROUT:CLOSE (@105)
change switch state (True, True)
update switch state 5 False args=() kw={} ncanvase=2
13:05:24 -- CLOSE  VALVE-5 (FirstToTurbo)
-------------------------- close 5 () result=[(True, True)]
action=close, ok=True, locked=[False]
close ('3',) {}
close name=3 desc=---
check software interlocks 3
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
ROUT:CLOSE (@103)
change switch state (True, True)
update switch state 3 False args=() kw={} ncanvase=2
13:05:25 -- CLOSE  VALVE-3 (SecondToIP)
-------------------------- close 3 () result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
block started
WaitControl setup for 2.0  
Join finished
block finished. duration 2.02452111244
open ('4',) {}
open name=4 desc=---
check software interlocks 4
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
ROUT:OPEN (@104)
change switch state (True, True)
update switch state 4 True args=() kw={} ncanvase=2
13:05:27 -- OPEN   VALVE-4 (FirstToSecondStage)
-------------------------- open 4 () result=[(True, True)]
action=open, ok=True, locked=[False]
open ('6',) {}
open name=6 desc=---
check software interlocks 6
interlocks ['7']
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
ROUT:OPEN (@106)
change switch state (True, True)
update switch state 6 True args=() kw={} ncanvase=2
13:05:27 -- OPEN   VALVE-6 (APOuter)
-------------------------- open 6 () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=51.0, duration=21.1602640152
helix_air.py completed successfully
no extraction action
Requested Output= 0.000
Achieved Output=  0.000
no extraction action
no extraction action
no extraction action
no extraction action
persistence save...
persistence save - db
AutomatedRunPersister post_extraction_save deprecated
persistence save - dvc
no extraction position for 
Extraction Finished
13:05:28 -- ******* Extraction Finished *******
no overlap. not waiting for min ms pumptime
start measurement
do measurement
L#=ba-01-H analysis type=blank_air
Measurement Started helix_air.py
13:05:28 -- ******* Measurement Started helix_air.py *******
state changed from extraction to measurement
setting spec, defl, and gains
GetExtractionLens ===>> 53.17
GetYSymmetry ===>> 21.3198412698413
GetZSymmetry ===>> 0
GetZFocus ===>> 0
GetDeflection L2(CDD) ===>> Error: Invalid Command
Failed reading L2(CDD) deflection. Error=could not convert string to float: Error: Invalid Command. Using previous value 0
GetGain H2 ===>> 0.986801698763664
GetGain H1 ===>> 1.00965220605837
GetGain AX ===>> 1.0074395083375
GetGain L1 ===>> 1.00823694673985
GetGain L2(CDD) ===>> 0
pre measurement save
New frame /Users/labuser/Pychron/data/isotopes/6f/655d61-b906-4713-b4d4-0c2daf20d3b4.h5
flush and close file /Users/labuser/Pychron/data/isotopes/6f/655d61-b906-4713-b4d4-0c2daf20d3b4.h5
testing...
no interpolation path defined
executed snippet estimated_duration=156.88, duration=0.000279903411865
activate_detectors ('H2', 'H1', 'AX', 'L1', 'L2(CDD)') {}
activate detectors
*************** Set Analysis View Ar/Ar
create graphs
clearing graphs
clear isotope group
setting isotope det=H2, iso=Ar40
setting isotope det=H1, iso=Iso40.9620
setting isotope det=AX, iso=Iso41.9620
setting isotope det=L1, iso=Iso42.9620
setting isotope det=L2(CDD), iso=Iso43.9620
load analysis view
position_magnet ('Ar40',) {'detector': 'H2'}
detector Detector(H2)
POSITION Ar40 H2
setting detector H2 to Ar40 (39.962)
setting detector H1 to Iso40.9620 (40.962)
setting detector AX to Iso41.9620 (41.962)
setting detector L1 to Iso42.9620 (42.962)
setting detector L2(CDD) to Iso43.9620 (43.962)
Mapping mass to dac mass func: "parabolic"
H2 map mass coeffs = [  2.53589168e-02  -1.84786063e+00   3.71389843e+01]
H2 map mass to dac 39.962 >> 3.79199
GetHighVoltage ===>> 9900
positioning Ar40 (3.79199) on H2
setting magnet DAC
current  : 3.728939
requested: 3.791990
Delta Dac: 0.063051
SetMagnetDAC 3.79199 ===>> OK
Magnet settling time: 0.500
Magnet settling complete
set_dac. change=True
update labels <pychron.experiment.plot_panel.PlotPanel object at 0x1267ce290>
update labels "<pychron.graph.stacked_regression_graph.StackedRegressionGraph object at 0x12bd91b90>"
setting label 0 H2 Ar40
setting label 1 H1 Iso40.9620
setting label 2 AX Iso41.9620
setting label 3 L1 Iso42.9620
setting label 4 L2(CDD) Iso43.9620
update labels "<pychron.graph.stacked_graph.StackedGraph object at 0x12bd91230>"
setting label 0 H2 Ar40
setting label 1 H1 Iso40.9620
setting label 2 AX Iso41.9620
setting label 3 L1 Iso42.9620
setting label 4 L2(CDD) Iso43.9620
equilibrate () {'inlet': '2', 'outlet': '1', 'eqtime': 15}
Equilibration Started
13:05:29 -- ******* Equilibration Started *******
check software interlocks 1
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
Close Valve Ion Pump Set ===>> OK
change switch state (True, True)
update switch state 1 False args=() kw={} ncanvase=2
13:05:29 -- CLOSE  VALVE-1 (MSIonPump)
waiting 3s before opening inlet value ('2',)
load indicator states
Switch indicator state True, Open
handle state ('11', True, False)
update switch state 11 True args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('10', True, False)
update switch state 10 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('1', False, False)
update switch state 1 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('3', False, False)
update switch state 3 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('2', False, False)
update switch state 2 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('5', False, False)
update switch state 5 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('4', True, False)
update switch state 4 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('7', False, False)
update switch state 7 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('6', True, False)
update switch state 6 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('9', False, False)
update switch state 9 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('8', False, False)
update switch state 8 False args=(False,) kw={} ncanvase=2
check software interlocks 2
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
ROUT:OPEN (@102)
change switch state (True, True)
update switch state 2 True args=() kw={} ncanvase=2
13:05:32 -- OPEN   VALVE-2 (ExtrToMS)
set_time_zero () {}
equilibrating for 15sec
sniff (15,) {}
py_sniff
build tables- sniff [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group /sniff/Ar40 (Group) '' table H2
add group /sniff/Iso40.9620 (Group) '' table H1
add group /sniff/Iso41.9620 (Group) '' table AX
add group /sniff/Iso42.9620 (Group) '' table L1
add group /sniff/Iso43.9620 (Group) '' table L2(CDD)
flush and close file /Users/labuser/Pychron/data/isotopes/6f/655d61-b906-4713-b4d4-0c2daf20d3b4.h5
measuring sniff. ncounts=15
"sniff" increment series count="1" fit count="0" regressing="False"
starting measurement
load indicator states
Switch indicator state True, Open
handle state ('11', True, False)
update switch state 11 True args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('10', True, False)
update switch state 10 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('1', False, False)
update switch state 1 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('3', False, False)
update switch state 3 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('2', True, False)
update switch state 2 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('5', False, False)
update switch state 5 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('4', True, False)
update switch state 4 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('7', False, False)
update switch state 7 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('6', True, False)
update switch state 6 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('9', False, False)
update switch state 9 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('8', False, False)
update switch state 8 False args=(False,) kw={} ncanvase=2
Equilibration Finished
13:05:48 -- ******* Equilibration Finished *******
check software interlocks 2
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
ROUT:CLOSE (@102)
change switch state (True, True)
update switch state 2 False args=() kw={} ncanvase=2
13:05:48 -- CLOSE  VALVE-2 (ExtrToMS)
Post Equilibration Started helix_pump_prep.py
13:05:48 -- ******* Post Equilibration Started helix_pump_prep.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000149965286255
close ('6',) {}
close name=6 desc=---
check software interlocks 6
interlocks ['7']
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
ROUT:CLOSE (@106)
waiting for write to finish
change switch state (True, True)
update switch state 6 False args=() kw={} ncanvase=2
13:05:48 -- CLOSE  VALVE-6 (APOuter)
-------------------------- close 6 () result=[(True, True)]
measurement finished
estimated time: 15.000 actual time: :15.147
flush and close file /Users/labuser/Pychron/data/isotopes/6f/655d61-b906-4713-b4d4-0c2daf20d3b4.h5
set_fits () {}
using default fits file=/Users/labuser/Pychron/scripts/measurement/fits/nominal.yaml
No fit for "Iso42.9620". defaulting to linear. check the measurement script "helix_air.py"
set "Iso42.9620" to "linear"
set "Ar40" to "('Linear', 'SEM')"
No fit for "Iso41.9620". defaulting to linear. check the measurement script "helix_air.py"
set "Iso41.9620" to "linear"
No fit for "Iso40.9620". defaulting to linear. check the measurement script "helix_air.py"
set "Iso40.9620" to "linear"
No fit for "Iso43.9620". defaulting to linear. check the measurement script "helix_air.py"
set "Iso43.9620" to "linear"
set_baseline_fits () {}
using default fits file=/Users/labuser/Pychron/scripts/measurement/fits/nominal.yaml
set "L1" to "('Average', 'SEM')"
set "H2" to "('Average', 'SEM')"
set "AX" to "('Average', 'SEM')"
set "H1" to "('Average', 'SEM')"
set "L2(CDD)" to "('Average', 'SEM')"
multicollect () {'ncounts': 60}
build tables- signal [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group /signal/Ar40 (Group) '' table H2
add group /signal/Iso40.9620 (Group) '' table H1
add group /signal/Iso41.9620 (Group) '' table AX
add group /signal/Iso42.9620 (Group) '' table L1
add group /signal/Iso43.9620 (Group) '' table L2(CDD)
flush and close file /Users/labuser/Pychron/data/isotopes/6f/655d61-b906-4713-b4d4-0c2daf20d3b4.h5
measuring signal. ncounts=60
action=close, ok=True, locked=[False]
close ('4',) {}
close name=4 desc=---
check software interlocks 4
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script close_channel True
ROUT:CLOSE (@104)
change switch state (True, True)
update switch state 4 False args=() kw={} ncanvase=2
13:05:48 -- CLOSE  VALVE-4 (FirstToSecondStage)
-------------------------- close 4 () result=[(True, True)]
action=close, ok=True, locked=[False]
sleep (2,) {}
SLEEP 2.0
"signal" increment series count="2" fit count="1" regressing="True"
block started
WaitControl setup for 2.0  
starting measurement
load indicator states
Switch indicator state True, Open
handle state ('11', True, False)
update switch state 11 True args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('10', True, False)
update switch state 10 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('1', False, False)
update switch state 1 False args=(False,) kw={} ncanvase=2
Join finished
block finished. duration 2.02247309685
open ('3',) {}
open name=3 desc=---
check software interlocks 3
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Switch indicator state False, Closed
handle state ('3', False, False)
ROUT:OPEN (@103)
update switch state 3 False args=(False,) kw={} ncanvase=2
change switch state (True, True)
update switch state 3 True args=() kw={} ncanvase=2
13:05:50 -- OPEN   VALVE-3 (SecondToIP)
-------------------------- open 3 () result=[(True, True)]
Switch indicator state False, Closed
handle state ('2', False, False)
update switch state 2 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('5', False, False)
update switch state 5 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('4', False, False)
update switch state 4 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('7', False, False)
update switch state 7 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('6', False, False)
update switch state 6 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('9', False, False)
update switch state 9 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('8', False, False)
update switch state 8 False args=(False,) kw={} ncanvase=2
action=open, ok=True, locked=[False]
open ('11',) {}
open name=11 desc=---
check software interlocks 11
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel False
ROUT:OPEN (@111)
change switch state (True, True)
update switch state 11 True args=() kw={} ncanvase=2
13:05:51 -- OPEN   VALVE-11 (APSafety)
-------------------------- open 11 () result=[(True, True)]
action=open, ok=True, locked=[False]
open ('5',) {}
open name=5 desc=---
check software interlocks 5
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
ROUT:OPEN (@105)
change switch state (True, True)
update switch state 5 True args=() kw={} ncanvase=2
13:05:51 -- OPEN   VALVE-5 (FirstToTurbo)
-------------------------- open 5 () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=6.0, duration=3.50131917
helix_pump_prep.py completed successfully
Post Equilibration Finished
13:05:51 -- ******* Post Equilibration Finished *******
load indicator states
Switch indicator state True, Open
handle state ('11', True, False)
update switch state 11 True args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('10', True, False)
update switch state 10 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('1', False, False)
update switch state 1 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('3', True, False)
update switch state 3 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('2', False, False)
update switch state 2 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('5', True, False)
update switch state 5 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('4', False, False)
update switch state 4 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('7', False, False)
update switch state 7 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('6', False, False)
update switch state 6 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('9', False, False)
update switch state 9 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('8', False, False)
update switch state 8 False args=(False,) kw={} ncanvase=2
load indicator states
Switch indicator state True, Open
handle state ('11', True, False)
update switch state 11 True args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('10', True, False)
update switch state 10 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('1', False, False)
update switch state 1 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('3', True, False)
update switch state 3 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('2', False, False)
update switch state 2 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('5', True, False)
update switch state 5 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('4', False, False)
update switch state 4 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('7', False, False)
update switch state 7 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('6', False, False)
update switch state 6 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('9', False, False)
update switch state 9 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('8', False, False)
update switch state 8 False args=(False,) kw={} ncanvase=2
13:06:12 -- collecting point 25
load indicator states
Switch indicator state True, Open
handle state ('11', True, False)
update switch state 11 True args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('10', True, False)
update switch state 10 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('1', False, False)
update switch state 1 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('3', True, False)
update switch state 3 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('2', False, False)
update switch state 2 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('5', True, False)
update switch state 5 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('4', False, False)
update switch state 4 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('7', False, False)
update switch state 7 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('6', False, False)
update switch state 6 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('9', False, False)
update switch state 9 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('8', False, False)
update switch state 8 False args=(False,) kw={} ncanvase=2
load indicator states
Switch indicator state True, Open
handle state ('11', True, False)
update switch state 11 True args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('10', True, False)
update switch state 10 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('1', False, False)
update switch state 1 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('3', True, False)
update switch state 3 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('2', False, False)
update switch state 2 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('5', True, False)
update switch state 5 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('4', False, False)
update switch state 4 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('7', False, False)
update switch state 7 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('6', False, False)
update switch state 6 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('9', False, False)
update switch state 9 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('8', False, False)
update switch state 8 False args=(False,) kw={} ncanvase=2
13:06:38 -- collecting point 50
load indicator states
Switch indicator state True, Open
handle state ('11', True, False)
update switch state 11 True args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('10', True, False)
update switch state 10 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('1', False, False)
update switch state 1 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('3', True, False)
update switch state 3 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('2', False, False)
update switch state 2 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('5', True, False)
update switch state 5 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('4', False, False)
update switch state 4 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('7', False, False)
update switch state 7 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('6', False, False)
update switch state 6 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('9', False, False)
update switch state 9 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('8', False, False)
update switch state 8 False args=(False,) kw={} ncanvase=2
waiting for write to finish
measurement finished
estimated time: 60.000 actual time: :60.283
flush and close file /Users/labuser/Pychron/data/isotopes/6f/655d61-b906-4713-b4d4-0c2daf20d3b4.h5
baselines () {'detector': 'H2', 'mass': 39.59, 'ncounts': 10}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Baseline
build tables- baseline [Detector(H2), Detector(H1), Detector(AX), Detector(L1), Detector(L2(CDD))]
add group baseline table H2
add group baseline table H1
add group baseline table AX
add group baseline table L1
add group baseline table L2(CDD)
flush and close file /Users/labuser/Pychron/data/isotopes/6f/655d61-b906-4713-b4d4-0c2daf20d3b4.h5
detector Detector(H2)
POSITION 39.59 H2
Mapping mass to dac mass func: "parabolic"
H2 map mass coeffs = [  2.53589168e-02  -1.84786063e+00   3.71389843e+01]
H2 map mass to dac 39.59 >> 3.7289390071
GetHighVoltage ===>> 9900
positioning 39.59 (3.7289390071) on H2
setting magnet DAC
current  : 3.791990
requested: 3.728939
Delta Dac: 0.063051
SetMagnetDAC 3.7289390071 ===>> OK
Magnet settling time: 0.500
Magnet settling complete
set_dac. change=True
Delaying 4s for detectors to settle
load indicator states
Switch indicator state True, Open
handle state ('11', True, False)
update switch state 11 True args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('10', True, False)
update switch state 10 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('1', False, False)
update switch state 1 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('3', True, False)
update switch state 3 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('2', False, False)
update switch state 2 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('5', True, False)
update switch state 5 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('4', False, False)
update switch state 4 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('7', False, False)
update switch state 7 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('6', False, False)
update switch state 6 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('9', False, False)
update switch state 9 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('8', False, False)
update switch state 8 False args=(False,) kw={} ncanvase=2
Join finished
measuring baseline. ncounts=10
"baseline" increment series count="2" fit count="1" regressing="True"
starting measurement
load indicator states
Switch indicator state True, Open
handle state ('11', True, False)
update switch state 11 True args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('10', True, False)
update switch state 10 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('1', False, False)
update switch state 1 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('3', True, False)
update switch state 3 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('2', False, False)
update switch state 2 False args=(False,) kw={} ncanvase=2
Switch indicator state True, Open
handle state ('5', True, False)
update switch state 5 True args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('4', False, False)
update switch state 4 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('7', False, False)
update switch state 7 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('6', False, False)
update switch state 6 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('9', False, False)
update switch state 9 False args=(False,) kw={} ncanvase=2
Switch indicator state False, Closed
handle state ('8', False, False)
update switch state 8 False args=(False,) kw={} ncanvase=2
waiting for write to finish
measurement finished
estimated time: 10.000 actual time: :10.102
flush and close file /Users/labuser/Pychron/data/isotopes/6f/655d61-b906-4713-b4d4-0c2daf20d3b4.h5
peak_center () {'detector': 'H2', 'isotope': 'Ar40'}
peak center: mean=0.222596205213 threshold=3
Skipping peak center. intensities to small. 0.222596205213<3
executed snippet estimated_duration=156.88, duration=96.2368450165
helix_air.py completed successfully
Measurement Finished
13:07:04 -- ******* Measurement Finished *******
Post Measurement Started helix_pump_ms.py
13:07:04 -- ******* Post Measurement Started helix_pump_ms.py *******
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.88486480713e-05
open ('1',) {}
open name=1 desc=---
check software interlocks 1
interlocks []
actuate state mode=None-script, software_lock=False
doing actuation None-script open_channel True
Open Valve Ion Pump Set ===>> OK
change switch state (True, True)
update switch state 1 True args=() kw={} ncanvase=2
13:07:04 -- OPEN   VALVE-1 (MSIonPump)
-------------------------- open 1 () result=[(True, True)]
action=open, ok=True, locked=[False]
executed snippet estimated_duration=0, duration=0.267857074738
helix_pump_ms.py completed successfully
setting _ms_pumptime
Post Measurement Finished
13:07:04 -- ******* Post Measurement Finished *******
$$$$$$$$$$$$$$$$$$$$ state at run end measurement
state changed from measurement to success
post measurement save measured=True aborted=False
Set filtering
setting fod for Iso42.9620= {'filter_outliers': False, 'std_devs': 2, 'iterations': 1}
setting fod for L1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Ar40= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for H2= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Iso41.9620= {'filter_outliers': False, 'std_devs': 2, 'iterations': 1}
setting fod for AX= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Iso40.9620= {'filter_outliers': False, 'std_devs': 2, 'iterations': 1}
setting fod for H1= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
setting fod for Iso43.9620= {'filter_outliers': False, 'std_devs': 2, 'iterations': 1}
setting fod for L2(CDD)= {'filter_outliers': True, 'std_devs': 2, 'iterations': 1}
persistence save...
persistence save - db
post measurement save
5040298608 connecting to database sqlite:////Users/labuser/Pychron/.appdata/local_lab.db
connected to db sqlite:////Users/labuser/Pychron/.appdata/local_lab.db
create new session 5040298608
close session 5040298608
No database instance. Not saving post measurement to isotopedb database
$$$$$$$$$$$$$$$ auto_save_detector_ic=False
persistence save - dvc
================= post measurement started
create new session 4933322608
close session 4933322608
---------------- Experiment Queue saving disabled
DVC saving peakcenter
Smart pull ahead: 0 behind: 0
Up-to-date with origin
add to repo msg=modified - 89bc375cd845c070619816cb57227db1a8e33785.json
add to repo msg=modified - -H-02.json
add to repo msg=modified - -H-02.dat.json
add to repo msg=modified - -H-02.blan.json
add to repo msg=modified - -H-02.inte.json
add to repo msg=modified - -H-02.icfa.json
add to repo msg=modified - -H-02.base.json
not at valid file /Users/labuser/Pychron/data/.dvc/repositories/Helix_air170/ba-01/tags/-H-02.tags.json
add to repo msg=modified - -H-02.peak.json
add to repo msg=modified - -H-02.extr.json
not at valid file /Users/labuser/Pychron/data/.dvc/repositories/Helix_air170/ba-01/monitor/-H-02.moni.json
commit message=<COLLECTION>
add to repo msg=modified - -H-02.inte.json
add to repo msg=modified - -H-02.base.json
commit message=<ISOEVO> default collection fits
add to repo msg=modified - -H-02.blan.json
commit message=<BLANKS> preceding ba-01-H-01
add to repo msg=modified - -H-02.icfa.json
commit message=<ICFactor> default
push repository <pychron.git_archive.repo_manager.GitRepoManager object at 0x1267cee30>
pushing to remote=origin, url=https://github.com
no changes to meta repo
create new session 4933322608
add association Helix_air170
get identifier "ba-01-H"
setting analysis irradiation position=<pychron.dvc.dvc_orm.IrradiationPositionTbl object at 0x12ccdaad0>
close session 4933322608
================= post measurement finished
13:07:10 -- ******* Post Run Check *******
loading queue conditionals post_run_actions
loading system conditionals post_run_actions
no system conditionals file located at None
loading queue conditionals post_run_terminations
loading system conditionals post_run_terminations
no system conditionals file located at None
13:07:10 -- ******* Post Run Check Passed *******
13:07:10 -- Automated run ba-01-H-02 success duration: 123.671 s
----------------- finish -----------------
----------------- stop -----------------
retroactive repository identifiers disabled
finish run. runs completed=2
update duration runid=ba-01-H-02, duration=123.671176195, md5=060fae79
loading script "helix_air.py"
loading script "helix_pump_ms.py"
loading script "helix_air.py"
loading script "helix_pump_prep.py"
testing...
no interpolation path defined
executed snippet estimated_duration=156.88, duration=0.000294923782349
script duration name:air seconds:157.0
loading script "helix_air.py"
loading script "helix_pump_ms.py"
loading script "helix_air.py"
loading script "helix_pump_prep.py"
testing...
no interpolation path defined
executed snippet estimated_duration=0, duration=2.59876251221e-05
air in script context. using previous estimated duration
script duration name:air seconds:157.0
loading script "helix_air.py"
loading script "helix_pump_ms.py"
loading script "helix_air.py"
loading script "helix_pump_prep.py"
testing...
no interpolation path defined
executed snippet estimated_duration=4.0, duration=0.000150918960571
Script duration 314.0
Run total estimated duration= 315.000
script duration name:air seconds:157.0
pump_ms in script context. using previous estimated duration
script duration name:air seconds:157.0
pump_prep in script context. using previous estimated duration
Script duration 314.0
Run total estimated duration= 315.000
nruns=2 before=5.0, run_dur=630.0, btw=30.0
write rem/ex queues
/Users/labuser/Pychron/experiments/rem/Air.rem.txt
/Users/labuser/Pychron/experiments/rem/Air.ex.txt
doing event level: 3
